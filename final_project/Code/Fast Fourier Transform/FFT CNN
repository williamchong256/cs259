{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"FFT CNN_NOT","provenance":[],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyOcFTOrQhoaJX+P0IVfKg7N"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"vA0J8EM_AsTS"},"source":["## FFT"]},{"cell_type":"code","metadata":{"id":"Wz_crABu8XVJ","executionInfo":{"status":"ok","timestamp":1623541225855,"user_tz":420,"elapsed":1765,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}}},"source":["# fcn model\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from tensorflow.keras.initializers import he_normal\n","from scipy.fft import fft\n","import numpy as np"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"pxEKCdeI5M_W","executionInfo":{"status":"ok","timestamp":1623541226538,"user_tz":420,"elapsed":697,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}}},"source":["# generate fft data\n","X = []\n","Y = []\n","for _ in range(10000):\n","  x = np.random.random(5) + np.random.random(5) * 1j\n","\n","  y = fft(x)\n","  x = x / np.linalg.norm(y)\n","  y = y / np.linalg.norm(y)\n","  xi,yi = [],[]\n","  for i in zip(np.real(x),np.imag(x)): xi += [i[0],i[1]]\n","  for i in zip(np.real(y),np.imag(y)): yi += [i[0],i[1]]\n","\n","  X += [xi]\n","  Y += [yi]\n","\n","X = np.array(X)\n","Y = np.array(Y)"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MrkAie6l58wU","executionInfo":{"status":"ok","timestamp":1623541226540,"user_tz":420,"elapsed":10,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"e1e807cf-a364-40ba-9fd3-01d7e5d625e6"},"source":["# generate model\n","X.shape,Y.shape"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((10000, 10), (10000, 10))"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JIArtHjy5n64","executionInfo":{"status":"ok","timestamp":1623541226540,"user_tz":420,"elapsed":7,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"e6e4eeb0-c098-467c-8fa0-eace737e088c"},"source":["Y[0]"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.60355942,  0.73205912, -0.09863232,  0.05823615, -0.08293331,\n","        0.08037436,  0.24635097, -0.09829988, -0.03898366,  0.03842309])"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"xRf1c034Xunt"},"source":["# Dense model test \n","to see if dense model will work"]},{"cell_type":"code","metadata":{"id":"32XwVodU66t0","executionInfo":{"status":"ok","timestamp":1623541226896,"user_tz":420,"elapsed":359,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}}},"source":["model = keras.Sequential()\n","\n","KI = he_normal(seed=0)\n","\n","model.add(layers.Dense(2,input_shape=(10,),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(layers.Dense(20,kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(layers.Dense(20,kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(layers.Dense(20,kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(layers.Dense(10,kernel_initializer=KI))"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_AdKA62B3HKp","executionInfo":{"status":"ok","timestamp":1623541262647,"user_tz":420,"elapsed":152,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"d5fe1e16-7ad5-4a89-99ee-f68793635e8b"},"source":["adam = keras.optimizers.Adam(lr=1e-3)\n","model.compile(optimizer=adam, loss='mean_squared_error', metrics=['accuracy'])\n","model.summary()"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense (Dense)                (None, 2)                 22        \n","_________________________________________________________________\n","leaky_re_lu (LeakyReLU)      (None, 2)                 0         \n","_________________________________________________________________\n","batch_normalization (BatchNo (None, 2)                 8         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 20)                60        \n","_________________________________________________________________\n","leaky_re_lu_1 (LeakyReLU)    (None, 20)                0         \n","_________________________________________________________________\n","batch_normalization_1 (Batch (None, 20)                80        \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 20)                420       \n","_________________________________________________________________\n","leaky_re_lu_2 (LeakyReLU)    (None, 20)                0         \n","_________________________________________________________________\n","batch_normalization_2 (Batch (None, 20)                80        \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 20)                420       \n","_________________________________________________________________\n","leaky_re_lu_3 (LeakyReLU)    (None, 20)                0         \n","_________________________________________________________________\n","batch_normalization_3 (Batch (None, 20)                80        \n","_________________________________________________________________\n","dense_4 (Dense)              (None, 10)                210       \n","=================================================================\n","Total params: 1,380\n","Trainable params: 1,256\n","Non-trainable params: 124\n","_________________________________________________________________\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/optimizer_v2/optimizer_v2.py:375: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  \"The `lr` argument is deprecated, use `learning_rate` instead.\")\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lHEqu7rw3S6-","executionInfo":{"status":"ok","timestamp":1623541351282,"user_tz":420,"elapsed":84889,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"da7a1013-b5dc-4653-cee3-118a9e62d348"},"source":["hist1 = model.fit(\n","        X[1000:],\n","        Y[1000:],\n","        batch_size=25,epochs=120,shuffle=True,validation_data=(X[:1000],Y[:1000])) #,verbose = 1)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Epoch 1/120\n","360/360 [==============================] - 2s 3ms/step - loss: 0.1363 - accuracy: 0.4040 - val_loss: 0.0310 - val_accuracy: 0.4510\n","Epoch 2/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0278 - accuracy: 0.5347 - val_loss: 0.0218 - val_accuracy: 0.5960\n","Epoch 3/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0237 - accuracy: 0.5646 - val_loss: 0.0212 - val_accuracy: 0.6050\n","Epoch 4/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0222 - accuracy: 0.5742 - val_loss: 0.0206 - val_accuracy: 0.6190\n","Epoch 5/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0215 - accuracy: 0.5783 - val_loss: 0.0198 - val_accuracy: 0.6110\n","Epoch 6/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0210 - accuracy: 0.5892 - val_loss: 0.0196 - val_accuracy: 0.6190\n","Epoch 7/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0208 - accuracy: 0.5899 - val_loss: 0.0197 - val_accuracy: 0.6090\n","Epoch 8/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0204 - accuracy: 0.5912 - val_loss: 0.0197 - val_accuracy: 0.6110\n","Epoch 9/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0203 - accuracy: 0.6033 - val_loss: 0.0193 - val_accuracy: 0.6060\n","Epoch 10/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0202 - accuracy: 0.6009 - val_loss: 0.0194 - val_accuracy: 0.6140\n","Epoch 11/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0200 - accuracy: 0.6037 - val_loss: 0.0193 - val_accuracy: 0.6160\n","Epoch 12/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0199 - accuracy: 0.5962 - val_loss: 0.0200 - val_accuracy: 0.6060\n","Epoch 13/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0199 - accuracy: 0.5957 - val_loss: 0.0194 - val_accuracy: 0.6090\n","Epoch 14/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0198 - accuracy: 0.6039 - val_loss: 0.0195 - val_accuracy: 0.6250\n","Epoch 15/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0198 - accuracy: 0.5933 - val_loss: 0.0192 - val_accuracy: 0.6120\n","Epoch 16/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0197 - accuracy: 0.6099 - val_loss: 0.0193 - val_accuracy: 0.6050\n","Epoch 17/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0197 - accuracy: 0.6098 - val_loss: 0.0190 - val_accuracy: 0.6160\n","Epoch 18/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0196 - accuracy: 0.5942 - val_loss: 0.0189 - val_accuracy: 0.6170\n","Epoch 19/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0196 - accuracy: 0.5994 - val_loss: 0.0191 - val_accuracy: 0.6220\n","Epoch 20/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0196 - accuracy: 0.6007 - val_loss: 0.0191 - val_accuracy: 0.6260\n","Epoch 21/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0195 - accuracy: 0.6067 - val_loss: 0.0191 - val_accuracy: 0.6080\n","Epoch 22/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0195 - accuracy: 0.6004 - val_loss: 0.0189 - val_accuracy: 0.6250\n","Epoch 23/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0195 - accuracy: 0.6018 - val_loss: 0.0192 - val_accuracy: 0.6200\n","Epoch 24/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0194 - accuracy: 0.6088 - val_loss: 0.0189 - val_accuracy: 0.6170\n","Epoch 25/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0194 - accuracy: 0.6077 - val_loss: 0.0191 - val_accuracy: 0.6300\n","Epoch 26/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0194 - accuracy: 0.6070 - val_loss: 0.0190 - val_accuracy: 0.6460\n","Epoch 27/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0194 - accuracy: 0.6116 - val_loss: 0.0191 - val_accuracy: 0.6200\n","Epoch 28/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0194 - accuracy: 0.6046 - val_loss: 0.0192 - val_accuracy: 0.6350\n","Epoch 29/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6086 - val_loss: 0.0190 - val_accuracy: 0.6360\n","Epoch 30/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0194 - accuracy: 0.6070 - val_loss: 0.0190 - val_accuracy: 0.6300\n","Epoch 31/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6103 - val_loss: 0.0188 - val_accuracy: 0.6520\n","Epoch 32/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0194 - accuracy: 0.6087 - val_loss: 0.0190 - val_accuracy: 0.6360\n","Epoch 33/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6090 - val_loss: 0.0187 - val_accuracy: 0.6330\n","Epoch 34/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6076 - val_loss: 0.0193 - val_accuracy: 0.6200\n","Epoch 35/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6007 - val_loss: 0.0190 - val_accuracy: 0.6170\n","Epoch 36/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6032 - val_loss: 0.0189 - val_accuracy: 0.6290\n","Epoch 37/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6030 - val_loss: 0.0190 - val_accuracy: 0.6420\n","Epoch 38/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6084 - val_loss: 0.0192 - val_accuracy: 0.6390\n","Epoch 39/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.5973 - val_loss: 0.0190 - val_accuracy: 0.6390\n","Epoch 40/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.5988 - val_loss: 0.0189 - val_accuracy: 0.6480\n","Epoch 41/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6026 - val_loss: 0.0190 - val_accuracy: 0.6340\n","Epoch 42/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6001 - val_loss: 0.0188 - val_accuracy: 0.6340\n","Epoch 43/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.6024 - val_loss: 0.0190 - val_accuracy: 0.6240\n","Epoch 44/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.5964 - val_loss: 0.0188 - val_accuracy: 0.6340\n","Epoch 45/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0193 - accuracy: 0.5920 - val_loss: 0.0189 - val_accuracy: 0.6320\n","Epoch 46/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.5987 - val_loss: 0.0189 - val_accuracy: 0.6340\n","Epoch 47/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6022 - val_loss: 0.0188 - val_accuracy: 0.6460\n","Epoch 48/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6106 - val_loss: 0.0187 - val_accuracy: 0.6530\n","Epoch 49/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6143 - val_loss: 0.0187 - val_accuracy: 0.6550\n","Epoch 50/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6170 - val_loss: 0.0188 - val_accuracy: 0.6410\n","Epoch 51/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6223 - val_loss: 0.0187 - val_accuracy: 0.6610\n","Epoch 52/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6189 - val_loss: 0.0190 - val_accuracy: 0.6350\n","Epoch 53/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6133 - val_loss: 0.0187 - val_accuracy: 0.6560\n","Epoch 54/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6182 - val_loss: 0.0190 - val_accuracy: 0.6460\n","Epoch 55/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6183 - val_loss: 0.0189 - val_accuracy: 0.6540\n","Epoch 56/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6223 - val_loss: 0.0188 - val_accuracy: 0.6430\n","Epoch 57/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6167 - val_loss: 0.0188 - val_accuracy: 0.6560\n","Epoch 58/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6191 - val_loss: 0.0188 - val_accuracy: 0.6590\n","Epoch 59/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6186 - val_loss: 0.0188 - val_accuracy: 0.6520\n","Epoch 60/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6172 - val_loss: 0.0187 - val_accuracy: 0.6640\n","Epoch 61/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6119 - val_loss: 0.0187 - val_accuracy: 0.6560\n","Epoch 62/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6167 - val_loss: 0.0186 - val_accuracy: 0.6550\n","Epoch 63/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6198 - val_loss: 0.0189 - val_accuracy: 0.6650\n","Epoch 64/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6203 - val_loss: 0.0188 - val_accuracy: 0.6510\n","Epoch 65/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6243 - val_loss: 0.0187 - val_accuracy: 0.6660\n","Epoch 66/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6270 - val_loss: 0.0187 - val_accuracy: 0.6630\n","Epoch 67/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6309 - val_loss: 0.0187 - val_accuracy: 0.6680\n","Epoch 68/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6283 - val_loss: 0.0187 - val_accuracy: 0.6660\n","Epoch 69/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6304 - val_loss: 0.0187 - val_accuracy: 0.6660\n","Epoch 70/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6213 - val_loss: 0.0187 - val_accuracy: 0.6790\n","Epoch 71/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6228 - val_loss: 0.0188 - val_accuracy: 0.6470\n","Epoch 72/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0192 - accuracy: 0.6206 - val_loss: 0.0186 - val_accuracy: 0.6340\n","Epoch 73/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6280 - val_loss: 0.0189 - val_accuracy: 0.6530\n","Epoch 74/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6302 - val_loss: 0.0185 - val_accuracy: 0.6640\n","Epoch 75/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6344 - val_loss: 0.0187 - val_accuracy: 0.6690\n","Epoch 76/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6240 - val_loss: 0.0187 - val_accuracy: 0.6640\n","Epoch 77/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6241 - val_loss: 0.0187 - val_accuracy: 0.6560\n","Epoch 78/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6226 - val_loss: 0.0188 - val_accuracy: 0.6780\n","Epoch 79/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6341 - val_loss: 0.0187 - val_accuracy: 0.6540\n","Epoch 80/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6319 - val_loss: 0.0187 - val_accuracy: 0.6710\n","Epoch 81/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6364 - val_loss: 0.0186 - val_accuracy: 0.6750\n","Epoch 82/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6373 - val_loss: 0.0187 - val_accuracy: 0.6700\n","Epoch 83/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6417 - val_loss: 0.0189 - val_accuracy: 0.6860\n","Epoch 84/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6413 - val_loss: 0.0186 - val_accuracy: 0.6800\n","Epoch 85/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6397 - val_loss: 0.0186 - val_accuracy: 0.6790\n","Epoch 86/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6339 - val_loss: 0.0186 - val_accuracy: 0.6700\n","Epoch 87/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6319 - val_loss: 0.0187 - val_accuracy: 0.6610\n","Epoch 88/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6316 - val_loss: 0.0186 - val_accuracy: 0.6690\n","Epoch 89/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6411 - val_loss: 0.0187 - val_accuracy: 0.6480\n","Epoch 90/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6328 - val_loss: 0.0187 - val_accuracy: 0.6730\n","Epoch 91/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6350 - val_loss: 0.0186 - val_accuracy: 0.6710\n","Epoch 92/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6382 - val_loss: 0.0187 - val_accuracy: 0.6650\n","Epoch 93/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6332 - val_loss: 0.0186 - val_accuracy: 0.6700\n","Epoch 94/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6379 - val_loss: 0.0186 - val_accuracy: 0.6780\n","Epoch 95/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6336 - val_loss: 0.0187 - val_accuracy: 0.6720\n","Epoch 96/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6350 - val_loss: 0.0186 - val_accuracy: 0.6760\n","Epoch 97/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6340 - val_loss: 0.0186 - val_accuracy: 0.6800\n","Epoch 98/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6423 - val_loss: 0.0187 - val_accuracy: 0.6760\n","Epoch 99/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6389 - val_loss: 0.0187 - val_accuracy: 0.6820\n","Epoch 100/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6407 - val_loss: 0.0187 - val_accuracy: 0.6810\n","Epoch 101/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6371 - val_loss: 0.0186 - val_accuracy: 0.6750\n","Epoch 102/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6371 - val_loss: 0.0187 - val_accuracy: 0.6820\n","Epoch 103/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6407 - val_loss: 0.0187 - val_accuracy: 0.6890\n","Epoch 104/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6430 - val_loss: 0.0185 - val_accuracy: 0.6930\n","Epoch 105/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6480 - val_loss: 0.0186 - val_accuracy: 0.6820\n","Epoch 106/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6522 - val_loss: 0.0188 - val_accuracy: 0.6900\n","Epoch 107/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6471 - val_loss: 0.0187 - val_accuracy: 0.6770\n","Epoch 108/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6420 - val_loss: 0.0186 - val_accuracy: 0.6710\n","Epoch 109/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6469 - val_loss: 0.0186 - val_accuracy: 0.6770\n","Epoch 110/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6417 - val_loss: 0.0187 - val_accuracy: 0.6710\n","Epoch 111/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6474 - val_loss: 0.0186 - val_accuracy: 0.6800\n","Epoch 112/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6393 - val_loss: 0.0189 - val_accuracy: 0.6710\n","Epoch 113/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6416 - val_loss: 0.0188 - val_accuracy: 0.6830\n","Epoch 114/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6400 - val_loss: 0.0187 - val_accuracy: 0.6710\n","Epoch 115/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0191 - accuracy: 0.6381 - val_loss: 0.0187 - val_accuracy: 0.6780\n","Epoch 116/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6419 - val_loss: 0.0188 - val_accuracy: 0.6780\n","Epoch 117/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6421 - val_loss: 0.0185 - val_accuracy: 0.6800\n","Epoch 118/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6384 - val_loss: 0.0186 - val_accuracy: 0.6750\n","Epoch 119/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6459 - val_loss: 0.0185 - val_accuracy: 0.6830\n","Epoch 120/120\n","360/360 [==============================] - 1s 2ms/step - loss: 0.0190 - accuracy: 0.6454 - val_loss: 0.0188 - val_accuracy: 0.6810\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YzlwLY4_6WmX","executionInfo":{"status":"ok","timestamp":1623541351798,"user_tz":420,"elapsed":527,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"dff671e2-4f04-4faf-e137-7b0db7d7414c"},"source":["model.predict(X)[0]"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.6156148 ,  0.62520444, -0.07242213, -0.0103875 , -0.01103164,\n","        0.04343977,  0.03106043, -0.19554776, -0.03791045,  0.05971747],\n","      dtype=float32)"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8MprEDGZ6aBm","executionInfo":{"status":"ok","timestamp":1623541351798,"user_tz":420,"elapsed":8,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"13e5e0c2-e7d7-4681-f331-56f6754087b9"},"source":["np.set_printoptions(suppress=True)\n","Y[0]"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.60355942,  0.73205912, -0.09863232,  0.05823615, -0.08293331,\n","        0.08037436,  0.24635097, -0.09829988, -0.03898366,  0.03842309])"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fk4qD5GG8Qdv","executionInfo":{"status":"ok","timestamp":1623541351799,"user_tz":420,"elapsed":6,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"fe12b470-bbfe-4ad4-b2c9-7287a0806dad"},"source":["X[0]"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.12587222, 0.16215857, 0.06099213, 0.10523057, 0.18473508,\n","       0.18528564, 0.12142169, 0.0740427 , 0.1105383 , 0.20534164])"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"dhMqC_RZY9bO"},"source":["#CNN model"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8jjzKuZ7RiFC","executionInfo":{"status":"ok","timestamp":1623541375895,"user_tz":420,"elapsed":143,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"b204e597-2f24-436d-ff57-5ac5153f4516"},"source":["SX = []\n","for x in X:\n","  xx = x.reshape(2,5,1)\n","  SX += [xx]\n","SX = np.array(SX)\n","print(SX.shape)\n","\n","SY = []\n","for y in Y:\n","  yy = y.reshape(2,5,1)\n","  SY += [yy]\n","SY = np.array(SY)\n","print(SY.shape)"],"execution_count":11,"outputs":[{"output_type":"stream","text":["(10000, 2, 5, 1)\n","(10000, 2, 5, 1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Qs9vEHt1Y89u","executionInfo":{"status":"ok","timestamp":1623541842746,"user_tz":420,"elapsed":502,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}}},"source":["\n","KI = he_normal(seed=0)\n","model = keras.Sequential()\n","model.add(tf.keras.layers.Conv2D(30, (2,2), padding=\"same\",input_shape=(2,5,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (2,2), padding=\"same\",input_shape=(2,5,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (2,2), padding=\"same\",input_shape=(2,5,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (2,2), padding=\"same\",input_shape=(2,5,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (1,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (1,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (1,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (1,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (1,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (1,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (1,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(30, (1,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())\n","model.add(layers.BatchNormalization())\n","model.add(tf.keras.layers.Conv2D(1, (1,1),kernel_initializer=KI))\n","model.add(tf.keras.layers.LeakyReLU())"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZFSTSd5pZxbW","executionInfo":{"status":"ok","timestamp":1623541844862,"user_tz":420,"elapsed":158,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"2e8b3c8e-0004-4c23-f8d5-2af4142c8aaf"},"source":["adam = keras.optimizers.Adam(lr=1e-3)\n","model.compile(optimizer=adam, loss='mean_squared_error',metrics=['mean_squared_error'])\n","model.summary()"],"execution_count":13,"outputs":[{"output_type":"stream","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d (Conv2D)              (None, 2, 5, 30)          150       \n","_________________________________________________________________\n","leaky_re_lu_4 (LeakyReLU)    (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_4 (Batch (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 2, 5, 30)          3630      \n","_________________________________________________________________\n","leaky_re_lu_5 (LeakyReLU)    (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_5 (Batch (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_2 (Conv2D)            (None, 2, 5, 30)          3630      \n","_________________________________________________________________\n","leaky_re_lu_6 (LeakyReLU)    (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_6 (Batch (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_3 (Conv2D)            (None, 2, 5, 30)          3630      \n","_________________________________________________________________\n","leaky_re_lu_7 (LeakyReLU)    (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_7 (Batch (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_4 (Conv2D)            (None, 2, 5, 30)          930       \n","_________________________________________________________________\n","leaky_re_lu_8 (LeakyReLU)    (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_8 (Batch (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_5 (Conv2D)            (None, 2, 5, 30)          930       \n","_________________________________________________________________\n","leaky_re_lu_9 (LeakyReLU)    (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_9 (Batch (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_6 (Conv2D)            (None, 2, 5, 30)          930       \n","_________________________________________________________________\n","leaky_re_lu_10 (LeakyReLU)   (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_10 (Batc (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_7 (Conv2D)            (None, 2, 5, 30)          930       \n","_________________________________________________________________\n","leaky_re_lu_11 (LeakyReLU)   (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_11 (Batc (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_8 (Conv2D)            (None, 2, 5, 30)          930       \n","_________________________________________________________________\n","leaky_re_lu_12 (LeakyReLU)   (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_12 (Batc (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_9 (Conv2D)            (None, 2, 5, 30)          930       \n","_________________________________________________________________\n","leaky_re_lu_13 (LeakyReLU)   (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_13 (Batc (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_10 (Conv2D)           (None, 2, 5, 30)          930       \n","_________________________________________________________________\n","leaky_re_lu_14 (LeakyReLU)   (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_14 (Batc (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_11 (Conv2D)           (None, 2, 5, 30)          930       \n","_________________________________________________________________\n","leaky_re_lu_15 (LeakyReLU)   (None, 2, 5, 30)          0         \n","_________________________________________________________________\n","batch_normalization_15 (Batc (None, 2, 5, 30)          120       \n","_________________________________________________________________\n","conv2d_12 (Conv2D)           (None, 2, 5, 1)           31        \n","_________________________________________________________________\n","leaky_re_lu_16 (LeakyReLU)   (None, 2, 5, 1)           0         \n","=================================================================\n","Total params: 19,951\n","Trainable params: 19,231\n","Non-trainable params: 720\n","_________________________________________________________________\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/optimizer_v2/optimizer_v2.py:375: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  \"The `lr` argument is deprecated, use `learning_rate` instead.\")\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ha-TyN8NZW-_","executionInfo":{"status":"ok","timestamp":1623542174496,"user_tz":420,"elapsed":323475,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"38c08528-4f30-46b6-f755-75031a4da488"},"source":["hist1 = model.fit(\n","        SX[1000:],\n","        SY[1000:],\n","        batch_size=25,epochs=80,shuffle=True,validation_data=(SX[:1000],SY[:1000])) #,verbose = 1)"],"execution_count":14,"outputs":[{"output_type":"stream","text":["Epoch 1/80\n","360/360 [==============================] - 5s 9ms/step - loss: 0.0479 - mean_squared_error: 0.0479 - val_loss: 0.0477 - val_mean_squared_error: 0.0477\n","Epoch 2/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0183 - mean_squared_error: 0.0183 - val_loss: 0.0173 - val_mean_squared_error: 0.0173\n","Epoch 3/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0172 - mean_squared_error: 0.0172 - val_loss: 0.0164 - val_mean_squared_error: 0.0164\n","Epoch 4/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0167 - mean_squared_error: 0.0167 - val_loss: 0.0160 - val_mean_squared_error: 0.0160\n","Epoch 5/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0165 - mean_squared_error: 0.0165 - val_loss: 0.0159 - val_mean_squared_error: 0.0159\n","Epoch 6/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0163 - mean_squared_error: 0.0163 - val_loss: 0.0160 - val_mean_squared_error: 0.0160\n","Epoch 7/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - val_loss: 0.0160 - val_mean_squared_error: 0.0160\n","Epoch 8/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0162 - mean_squared_error: 0.0162 - val_loss: 0.0162 - val_mean_squared_error: 0.0162\n","Epoch 9/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - val_loss: 0.0159 - val_mean_squared_error: 0.0159\n","Epoch 10/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0160 - mean_squared_error: 0.0160 - val_loss: 0.0158 - val_mean_squared_error: 0.0158\n","Epoch 11/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - val_loss: 0.0163 - val_mean_squared_error: 0.0163\n","Epoch 12/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - val_loss: 0.0159 - val_mean_squared_error: 0.0159\n","Epoch 13/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0159 - mean_squared_error: 0.0159 - val_loss: 0.0157 - val_mean_squared_error: 0.0157\n","Epoch 14/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 15/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0158 - mean_squared_error: 0.0158 - val_loss: 0.0156 - val_mean_squared_error: 0.0156\n","Epoch 16/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - val_loss: 0.0156 - val_mean_squared_error: 0.0156\n","Epoch 17/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0157 - mean_squared_error: 0.0157 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 18/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 19/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - val_loss: 0.0156 - val_mean_squared_error: 0.0156\n","Epoch 20/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 21/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0156 - mean_squared_error: 0.0156 - val_loss: 0.0156 - val_mean_squared_error: 0.0156\n","Epoch 22/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0155 - mean_squared_error: 0.0155 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 23/80\n","360/360 [==============================] - 3s 9ms/step - loss: 0.0155 - mean_squared_error: 0.0155 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 24/80\n","360/360 [==============================] - 3s 10ms/step - loss: 0.0155 - mean_squared_error: 0.0155 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 25/80\n","360/360 [==============================] - 3s 10ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - val_loss: 0.0156 - val_mean_squared_error: 0.0156\n","Epoch 26/80\n","360/360 [==============================] - 3s 10ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - val_loss: 0.0156 - val_mean_squared_error: 0.0156\n","Epoch 27/80\n","360/360 [==============================] - 3s 10ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - val_loss: 0.0157 - val_mean_squared_error: 0.0157\n","Epoch 28/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 29/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - val_loss: 0.0157 - val_mean_squared_error: 0.0157\n","Epoch 30/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0154 - mean_squared_error: 0.0154 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 31/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0153 - mean_squared_error: 0.0153 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 32/80\n","360/360 [==============================] - 3s 10ms/step - loss: 0.0153 - mean_squared_error: 0.0153 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 33/80\n","360/360 [==============================] - 3s 10ms/step - loss: 0.0153 - mean_squared_error: 0.0153 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 34/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0153 - mean_squared_error: 0.0153 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 35/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0153 - mean_squared_error: 0.0153 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 36/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0153 - mean_squared_error: 0.0153 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 37/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 38/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 39/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 40/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 41/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 42/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0152 - mean_squared_error: 0.0152 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 43/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - val_loss: 0.0152 - val_mean_squared_error: 0.0152\n","Epoch 44/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 45/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 46/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 47/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - val_loss: 0.0158 - val_mean_squared_error: 0.0158\n","Epoch 48/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - val_loss: 0.0156 - val_mean_squared_error: 0.0156\n","Epoch 49/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - val_loss: 0.0156 - val_mean_squared_error: 0.0156\n","Epoch 50/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 51/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0151 - mean_squared_error: 0.0151 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 52/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 53/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 54/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 55/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 56/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 57/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 58/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 59/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 60/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 61/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 62/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0150 - mean_squared_error: 0.0150 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 63/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 64/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 65/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 66/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0152 - val_mean_squared_error: 0.0152\n","Epoch 67/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 68/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 69/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 70/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 71/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0149 - mean_squared_error: 0.0149 - val_loss: 0.0152 - val_mean_squared_error: 0.0152\n","Epoch 72/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 73/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0151 - val_mean_squared_error: 0.0151\n","Epoch 74/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n","Epoch 75/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 76/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0155 - val_mean_squared_error: 0.0155\n","Epoch 77/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0152 - val_mean_squared_error: 0.0152\n","Epoch 78/80\n","360/360 [==============================] - 4s 10ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0153 - val_mean_squared_error: 0.0153\n","Epoch 79/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0152 - val_mean_squared_error: 0.0152\n","Epoch 80/80\n","360/360 [==============================] - 4s 11ms/step - loss: 0.0148 - mean_squared_error: 0.0148 - val_loss: 0.0154 - val_mean_squared_error: 0.0154\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s0sLgXy5cIt7","executionInfo":{"status":"ok","timestamp":1623542175403,"user_tz":420,"elapsed":913,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"3b92bb96-8b66-4e62-af50-0b60032850c4"},"source":["print(SX.shape)\n","print(model.predict(SX).shape)"],"execution_count":15,"outputs":[{"output_type":"stream","text":["(10000, 2, 5, 1)\n","(10000, 2, 5, 1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aKj2QWd3T2B1","executionInfo":{"status":"ok","timestamp":1623542348731,"user_tz":420,"elapsed":823,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"437005f5-3e85-491d-fd30-fcf7d40fdd72"},"source":["print(\"predicted\")\n","print(model.predict(SX)[1])\n","print(\"true\")\n","print(SY[1])"],"execution_count":23,"outputs":[{"output_type":"stream","text":["predicted\n","[[[ 0.83466226]\n","  [ 0.38197204]\n","  [-0.13820986]\n","  [-0.0749337 ]\n","  [ 0.02880531]]\n","\n"," [[-0.06401979]\n","  [-0.01098412]\n","  [ 0.03124514]\n","  [-0.01330292]\n","  [-0.0044638 ]]]\n","true\n","[[[ 0.83943187]\n","  [ 0.34774628]\n","  [-0.31956575]\n","  [-0.16844424]\n","  [ 0.00742676]]\n","\n"," [[-0.07357556]\n","  [-0.16120201]\n","  [ 0.05932302]\n","  [ 0.06339164]\n","  [-0.07027523]]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-Hi3kZgkbT7G"},"source":["# Original Code Benchmark"]},{"cell_type":"code","metadata":{"id":"rUCuTmDQlL_w","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1623540943790,"user_tz":420,"elapsed":149,"user":{"displayName":"SJ alone","photoUrl":"","userId":"08743502353242220456"}},"outputId":"2fc9fee1-5b9b-4aa1-ae42-a424f7a9571e"},"source":["import time\n","x = np.random.random(5) + np.random.random(5) * 1j\n","\n","t = time.time()\n","y = fft(x)\n","time.time() -t"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.000133514404296875"]},"metadata":{"tags":[]},"execution_count":14}]}]}